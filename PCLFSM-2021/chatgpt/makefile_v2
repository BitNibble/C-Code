###########################################################
#                                                         #
#                       MAKEFILE                          #
#                                                         #
# author: sergio santos                                   #
# mail: sergio.salazar.santos@gmail.com (year: 2012)     #
#                                                         #
###########################################################

# Compiler and tools
CC = gcc
CXX = g++
AS = as

# Compiler flags
COMPILE = -c
WARNING = -g -Wall -Wextra
ASSEMBLY = -S

# Libraries
LIBMATH = -lm

# Project directories and files
OBJDIR = obj
BINDIR = bin
SRCDIR = src
INCDIR = include
MAINDIR = main

PROJECT = $(BINDIR)/out
HFILES = $(wildcard $(INCDIR)/*.h)
CFILES = $(wildcard $(SRCDIR)/*.c)
MAINFILE = $(MAINDIR)/main.c

# Object and assembly files
OFILES = $(patsubst $(SRCDIR)/%.c, $(OBJDIR)/%.o, $(CFILES))
MAIN_OBJ = $(OBJDIR)/main.o

# Procedures header
.PHONY: clean run message

# Ensure output directories exist
$(shell mkdir -p $(OBJDIR) $(BINDIR))

# Project target
$(PROJECT): $(OFILES) $(MAIN_OBJ)
	@echo "LINKING PROJECT"
	$(CC) $(WARNING) $(OFILES) $(MAIN_OBJ) $(LIBMATH) -o $@

# Compile source files into object files
$(OBJDIR)/%.o: $(SRCDIR)/%.c $(HFILES)
	@echo "COMPILING $<"
	$(CC) $(COMPILE) $(WARNING) -I$(INCDIR) $< -o $@

# Compile the main file into an object file
$(MAIN_OBJ): $(MAINFILE) $(HFILES)
	@echo "COMPILING MAIN FILE $<"
	$(CC) $(COMPILE) $(WARNING) -I$(INCDIR) $< -o $@

# Generate assembly files from source files
$(OBJDIR)/%.S: $(SRCDIR)/%.c
	@echo "GENERATING ASSEMBLY FOR $<"
	$(CC) $(ASSEMBLY) $(WARNING) $< -o $@

# Clean up generated files
clean:
	@echo "CLEANING UP"
	-rm -vf $(OBJDIR)/*.o $(OBJDIR)/*.S $(PROJECT)

# Run the project
run: $(PROJECT)
	@echo "RUNNING PROJECT"
	chmod 775 $(PROJECT)
	./$(PROJECT)

# Display message with file lists
message:
	@echo "Source Files: $(CFILES)"
	@echo "Main File: $(MAINFILE)"
	@echo "Header Files: $(HFILES)"
	@echo "Object Files: $(OFILES) $(MAIN_OBJ)"

# EOF
